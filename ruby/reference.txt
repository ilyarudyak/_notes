1) Ruby has a simple definition of truth. Any value that is not nil or the constant false is true â€” "cat", 99, 0, and :a_song are all considered true. - see pickaxe, p. 132.

2) load, require, include - see lynda ruby

load: loads a source file every time it is called
require: loads a source file *only once*

include: includes modules, *nothing* to do with files  

3) classes are always open (see learning ruby, p. 126):

You can open the Array class and add a method to it such as array_of_ten, as shown in Example 9-2. This feature makes the language incredibly flexible.

Class Array
  def array_of_ten
    (1..10).to_a
  end
end

4) there are 3 interesting methods in hash class:

    a) h1.merge(h2) and with block (see lynda -section blocks/merge)
    b) h1.map {|k,v| k} 
    c) h1.sort {|i1,i2| i1[0] <=> i2[0]} - ruby implicitly convert hash to an array of pairs and we have to sort based on 0 or 1 element of these pairs (use i1[1] <=> i2[1] for sorting based on element 1);



